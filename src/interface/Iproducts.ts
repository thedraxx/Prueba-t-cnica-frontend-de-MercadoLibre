// Generated by https://quicktype.io

export interface Iproducts {
    site_id:                   SiteID;
    country_default_time_zone: string;
    query:                     string;
    paging:                    Paging;
    results:                   Result[];
    sort:                      Sort;
    available_sorts:           Sort[];
    filters:                   any[];
    available_filters:         AvailableFilter[];
}

export interface AvailableFilter {
    id:     string;
    name:   string;
    type:   string;
    values: AvailableFilterValue[];
}

export interface AvailableFilterValue {
    id:      string;
    name:    string;
    results: number;
}

export interface Sort {
    id:   StateIDEnum | null;
    name: CityNameEnum;
}

export enum StateIDEnum {
    Ar = "AR",
    ArC = "AR-C",
    PriceAsc = "price_asc",
    PriceDesc = "price_desc",
    Relevance = "relevance",
    TUXBQkNPTjExMDBa = "TUxBQkNPTjExMDBa",
}

export enum CityNameEnum {
    Argentina = "Argentina",
    CapitalFederal = "Capital Federal",
    Constitución = "Constitución",
    MayorPrecio = "Mayor precio",
    MenorPrecio = "Menor precio",
    MásRelevantes = "Más relevantes",
    Tribunales = "TRIBUNALES",
}

export interface Paging {
    total:           number;
    primary_results: number;
    offset:          number;
    limit:           number;
}

export interface Result {
    id:                    string;
    title:                 string;
    condition:             Condition;
    thumbnail_id:          string;
    catalog_product_id:    null | string;
    listing_type_id:       ListingTypeID;
    permalink:             string;
    buying_mode:           BuyingMode;
    site_id:               SiteID;
    category_id:           string;
    domain_id:             string;
    thumbnail:             string;
    currency_id:           CurrencyID;
    order_backend:         number;
    price:                 number;
    original_price:        null;
    sale_price:            null;
    sold_quantity:         number;
    available_quantity:    number;
    official_store_id:     number | null;
    use_thumbnail_id:      boolean;
    accepts_mercadopago:   boolean;
    tags:                  ResultTag[];
    variation_filters?:    VariationFilter[];
    shipping:              Shipping;
    stop_time:             string;
    seller:                Seller;
    seller_address:        SellerAddress;
    address:               Address;
    attributes:            Attribute[];
    variations_data?:      { [key: string]: VariationsDatum };
    installments:          Installments;
    winner_item_id:        null;
    catalog_listing:       boolean;
    discounts:             null;
    promotions:            any[];
    inventory_id:          null | string;
    official_store_name?:  string;
    differential_pricing?: DifferentialPricing;
}

export interface Address {
    state_id:   StateIDEnum;
    state_name: CityNameEnum;
    city_id:    StateIDEnum | null;
    city_name:  CityNameEnum;
}

export interface Attribute {
    id:                   AttributeID;
    name:                 AttributeName;
    value_id:             null | string;
    value_name:           null | string;
    attribute_group_id:   AttributeGroupID;
    attribute_group_name: AttributeGroupName;
    value_struct:         Struct | null;
    values:               AttributeValue[];
    source:               number;
    value_type:           ValueType;
}

export enum AttributeGroupID {
    Others = "OTHERS",
}

export enum AttributeGroupName {
    Otros = "Otros",
}

export enum AttributeID {
    Brand = "BRAND",
    ItemCondition = "ITEM_CONDITION",
    Length = "LENGTH",
    Line = "LINE",
    Model = "MODEL",
    PackageLength = "PACKAGE_LENGTH",
    PackageWeight = "PACKAGE_WEIGHT",
    SaleFormat = "SALE_FORMAT",
    TabouretLength = "TABOURET_LENGTH",
    TabouretWeight = "TABOURET_WEIGHT",
    UnitsPerPack = "UNITS_PER_PACK",
    Weight = "WEIGHT",
}

export enum AttributeName {
    CondiciónDelÍtem = "Condición del ítem",
    FormatoDeVenta = "Formato de venta",
    Largo = "Largo",
    LargoDelPaquete = "Largo del paquete",
    Línea = "Línea",
    Marca = "Marca",
    Modelo = "Modelo",
    Peso = "Peso",
    PesoDelPaquete = "Peso del paquete",
    UnidadesPorPack = "Unidades por pack",
}

export interface Struct {
    number: number;
    unit:   Unit;
}

export enum Unit {
    CM = "cm",
    G = "g",
    Kg = "kg",
}

export enum ValueType {
    List = "list",
    Number = "number",
    NumberUnit = "number_unit",
    String = "string",
}

export interface AttributeValue {
    id:     null | string;
    name:   null | string;
    struct: Struct | null;
    source: number;
}

export enum BuyingMode {
    BuyItNow = "buy_it_now",
}

export enum Condition {
    New = "new",
}

export enum CurrencyID {
    Ars = "ARS",
}

export interface DifferentialPricing {
    id: number;
}

export interface Installments {
    quantity:    number;
    amount:      number;
    rate:        number;
    currency_id: CurrencyID;
}

export enum ListingTypeID {
    GoldPro = "gold_pro",
    GoldSpecial = "gold_special",
}

export interface Seller {
    id:                 number;
    nickname:           Nickname;
    car_dealer:         boolean;
    real_estate_agency: boolean;
    _:                  boolean;
    registration_date:  string;
    tags:               SellerTag[];
    car_dealer_logo:    string;
    permalink:          string;
    seller_reputation:  SellerReputation;
    eshop:              Eshop;
}

export interface Eshop {
    eshop_id:         number;
    seller:           number;
    nick_name:        Nickname;
    eshop_status_id:  number;
    site_id:          SiteID;
    eshop_experience: number;
    eshop_rubro:      null;
    eshop_locations:  any[];
    eshop_logo_url:   string;
}

export enum Nickname {
    AlfaomegaEditor = "ALFAOMEGA EDITOR",
    JerezEditores = "JEREZ EDITORES",
    QueriAccesorios = "QUERI ACCESORIOS",
    QueriaccesoriosCapital = "QUERIACCESORIOS CAPITAL",
}

export enum SiteID {
    Mla = "MLA",
}

export interface SellerReputation {
    level_id:            LevelID;
    power_seller_status: PowerSellerStatus;
    transactions:        Transactions;
    metrics:             Metrics;
}

export enum LevelID {
    The5_Green = "5_green",
}

export interface Metrics {
    sales:                 Sales;
    claims:                Cancellations;
    delayed_handling_time: Cancellations;
    cancellations:         Cancellations;
}

export interface Cancellations {
    period: CancellationsPeriod;
    rate:   number;
    value:  number;
}

export enum CancellationsPeriod {
    The60Days = "60 days",
}

export interface Sales {
    period:    CancellationsPeriod;
    completed: number;
}

export enum PowerSellerStatus {
    Platinum = "platinum",
}

export interface Transactions {
    canceled:  number;
    completed: number;
    period:    TransactionsPeriod;
    ratings:   Ratings;
    total:     number;
}

export enum TransactionsPeriod {
    Historic = "historic",
}

export interface Ratings {
    negative: number;
    neutral:  number;
    positive: number;
}

export enum SellerTag {
    Brand = "brand",
    CreditsProfile = "credits_profile",
    Eshop = "eshop",
    LargeSeller = "large_seller",
    MessagesAsSeller = "messages_as_seller",
    Mshops = "mshops",
    Normal = "normal",
}

export interface SellerAddress {
    comment:      string;
    address_line: string;
    id:           null;
    latitude:     null;
    longitude:    null;
    country:      Sort;
    state:        Sort;
    city:         Sort;
}

export interface Shipping {
    store_pick_up: boolean;
    free_shipping: boolean;
    logistic_type: LogisticType;
    mode:          Mode;
    tags:          ShippingTag[];
    benefits:      null;
    promise:       null;
}

export enum LogisticType {
    Fulfillment = "fulfillment",
    XdDropOff = "xd_drop_off",
}

export enum Mode {
    Me2 = "me2",
}

export enum ShippingTag {
    FSRemovedByTagger = "fs_removed_by_tagger",
    Fulfillment = "fulfillment",
    MLAChgThresholdAgo22 = "MLA-chg-threshold-ago-22",
    MLAChgThresholdFeb23 = "MLA-chg-threshold-Feb-23",
    MandatoryFreeShipping = "mandatory_free_shipping",
    SelfServiceIn = "self_service_in",
    SelfServiceOut = "self_service_out",
}

export enum ResultTag {
    BrandVerified = "brand_verified",
    CartEligible = "cart_eligible",
    ExtendedWarrantyEligible = "extended_warranty_eligible",
    GoodQualityPicture = "good_quality_picture",
    GoodQualityThumbnail = "good_quality_thumbnail",
    ImmediatePayment = "immediate_payment",
    LoyaltyDiscountEligible = "loyalty_discount_eligible",
    ShippingGuaranteed = "shipping_guaranteed",
}

export enum VariationFilter {
    ChairStructureColor = "CHAIR_STRUCTURE_COLOR",
    Color = "COLOR",
    FabricDesign = "FABRIC_DESIGN",
    Finish = "FINISH",
    PatternName = "PATTERN_NAME",
    SeatColor = "SEAT_COLOR",
    StructureFinish = "STRUCTURE_FINISH",
}

export interface VariationsDatum {
    thumbnail:     string;
    ratio:         string;
    name:          VariationsDatumName;
    pictures_qty:  number;
    inventory_id?: string;
}

export enum VariationsDatumName {
    Cuadrado = "Cuadrado",
    Empty = "",
    Madera = "Madera",
    MarrónClaro = "Marrón claro",
    Natural = "Natural",
    Redondo = "Redondo",
}
